<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="PROVE" version="12.0.0.2017041100">
  <ownedViewpoints name="PROVEviewpoint">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="PROVE diagram" titleExpression="aql: self.name + ' PROVE Diagram'" initialisation="true" domainClass="PROVE::Process" enablePopupBars="true">
      <metamodel href="dsm.PROVE#/"/>
      <layout xsi:type="description_1:CompositeLayout" direction="LeftToRight"/>
      <defaultLayer name="Default">
        <nodeMappings name="Process" preconditionExpression="aql: self->notEmpty()=false" deletionDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteActivity']" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self" doubleClickDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='dblclkActivityProcess']" synchronizationLock="true" domainClass="PROVE::Process">
          <style xsi:type="style:SquareDescription" labelSize="14" tooltipExpression="PROVE Activity" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="20" height="20">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>italic</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="dummyNode" label="Dummy" preconditionExpression="aql: self.oclIsTypeOf(PROVE::ShadowNodeIncoming) or self.oclIsTypeOf(PROVE::ShadowNodeOutgoing)" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self.eContents()" domainClass="PROVE::Process">
          <conditionnalStyles predicateExpression="aql: self.oclIsTypeOf(PROVE::ShadowNodeIncoming)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql: ' '" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" arcHeight="1000" workspacePath="/PROVE.design/icons/arrowOutSmall.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.oclIsTypeOf(PROVE::ShadowNodeOutgoing)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql: ' '" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" arcHeight="100" workspacePath="/PROVE.design/icons/arrowOutSmall.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="ArtifactInState" preconditionExpression="aql: self.originatingActivity&lt;>container and self.usedByActivity&lt;>container" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" doubleClickDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@additionalLayers[name='Status']/@toolSections.0/@ownedTools[name='dblclkActivityState']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@nodeMappings[name='Process'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@subContainerMappings[name='ProcessHierarchy'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@nodeMappings[name='Process'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@subContainerMappings[name='ProcessHierarchy'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']" targetFinderExpression="aql: self.usedByActivity " sourceFinderExpression="aql: self.originatingActivity" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArtifactInStateFromPort" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@borderedNodeMappings[name='ArtifactPortIn']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@nodeMappings[name='Process'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@subContainerMappings[name='ProcessHierarchy']" targetFinderExpression="aql: self.usedByActivity " sourceFinderExpression="aql: self" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArtifactInStateToPort" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@nodeMappings[name='Process'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@subContainerMappings[name='ProcessHierarchy']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@borderedNodeMappings[name='ArtifactPortOut']" targetFinderExpression="aql: self" sourceFinderExpression="aql: self.originatingActivity" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ProcessTopHierarchy" preconditionExpression="aql: self->notEmpty()=true" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self" synchronizationLock="true" domainClass="PROVE::Process" reusedContainerMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@subContainerMappings[name='ProcessHierarchy']">
          <borderedNodeMappings name="ArtifactPortIn" preconditionExpression="aql: self.originatingActivity=container" semanticCandidatesExpression="aql: self.ancestors()->prepend(self)->last().eAllContents(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
            <style xsi:type="style:DotDescription" labelSize="12" sizeComputationExpression="1" labelPosition="node" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="ArtifactPortOut" preconditionExpression="aql: self.usedByActivity=container" semanticCandidatesExpression="aql: self.ancestors()->prepend(self)->last().eAllContents(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
            <style xsi:type="style:DotDescription" labelSize="12" sizeComputationExpression="1" labelPosition="node" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
            </style>
          </borderedNodeMappings>
          <subContainerMappings name="ProcessHierarchy" preconditionExpression="aql: self->notEmpty()=true and self.oclIsTypeOf(PROVE::Process)" deletionDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteActivity']" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self.process" doubleClickDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='dblclkActivityProcess']" domainClass="PROVE::Process" reusedContainerMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@subContainerMappings[name='ProcessHierarchy']">
            <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="3" labelSize="12" showIcon="false">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </containerMappings>
        <toolSections name="PROVE toolbox">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Activity" nodeMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@nodeMappings[name='Process']" iconPath="dsm.PROVE.edit\icons\full\obj16\ActivityAdd.gif" extraMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@subContainerMappings[name='ProcessHierarchy']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::Process" referenceName="process" variableName="instanceProcess">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ShadowNodeIncoming" referenceName="process" variableName="instanceProcessDummyIn"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ShadowNodeOutgoing" referenceName="process" variableName="instanceProcessDummyOut"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Activity Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Activity']/@initialOperation/@firstModelOperations/@subModelOperations.1/@groups.0"/>
                  <groups name="Default Group" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:TextDescription" name="name" labelExpression="Activity name:" valueExpression="aql:instance.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcess">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcessDummyIn">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue+'DummyIn'"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcessDummyOut">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue+'DummyOut'"/>
                            </subModelOperations>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="ArtifactInState" label="Artifact in State" edgeMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState']" iconPath="dsm.PROVE.edit\icons\full\obj16\ArtifactAddSmall.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.ancestors()->last()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Artifact in State Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:Let" variableName="foundArtifact" valueExpression="aql: OrderedSet{source, target}.ancestors().eAllContents()->select(artifact | artifact.name = newArtifactName)->last()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifactByNameFailed" valueExpression="aql: foundArtifact->isEmpty()">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: foundArtifactByNameFailed=true">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Artifact not found">
                              <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                                <initialOperation/>
                              </buttons>
                              <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                                <initialOperation>
                                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source.ancestors()->last()">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::Artifact" referenceName="artifact" variableName="foundArtifact">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:foundArtifact">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newArtifactName"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </firstModelOperations>
                                </initialOperation>
                              </buttons>
                              <page name="Confirm creation" labelExpression="Confirm creation of new artifact by clicking on 'OK' (otherwise 'CANCEL')" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ArtifactInState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@buttons.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                              <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:foundArtifact">
                            <subModelOperations xsi:type="tool_1:Let" variableName="foundState" valueExpression="aql: foundArtifact.eContents(PROVE::ArtifactState)->select(artifactState | artifactState.name = newStateName)->last()">
                              <subModelOperations xsi:type="tool_1:Let" variableName="foundStateFailed" valueExpression="aql: foundState->isEmpty()">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: foundStateFailed=true">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ArtifactState" referenceName="state" variableName="foundState">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newStateName"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="artifactName" valueExpression="var:newArtifactName"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: foundState">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ArtifactStateInstance" referenceName="artifactstateinstance">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="usedByActivity" valueExpression="var:target"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="originatingActivity" valueExpression="aql: source"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: foundState"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ArtifactInState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="Default Group" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:TextDescription" name="ArtifactName" labelExpression="Artifact Name:">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newArtifactName" valueExpression="aql:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:TextDescription" labelExpression="State name:">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newStateName" valueExpression="aql:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkActivityProcess" mappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@nodeMappings[name='Process'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy']/@subContainerMappings[name='ProcessHierarchy']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ChangeName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectArtifactTarget">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="usedByActivity" valueExpression="aql: target"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectArtifactSource" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="originatingActivity" valueExpression="aql: target"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ChangeArtifactDetails">
            <mask mask="{0}::{1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::ArtifactState)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg1"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::Artifact)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql: self.eContents(PROVE::ArtifactState)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="artifactName" valueExpression="aql: arg0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteActivity">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element">
                <subModelOperations xsi:type="tool_1:For" expression="aql: element.artifactInStateUsed">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="aql: element.resultArtifactInState">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Representation Tools">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="encapsulate" candidatesExpression="aql: self.process->select(instance| instance.oclIsTypeOf(PROVE::Process))" multiple="true" message="Select elements to encapsulate in this diagram" iconPath="/PROVE.design/icons/inspectEncapSmall.png" windowTitle="Process Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element->filter(PROVE::Process).encapsulateElements(diagram)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="de-encapsulate" candidatesExpression="aql: self.process->select(instance| instance.oclIsTypeOf(PROVE::Process))" multiple="true" iconPath="/PROVE.design/icons/inspectDeEncapSmall.png" windowTitle="Cancel Process Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element->filter(PROVE::Process).decapsulateElements(diagram)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="Show Artifact Lifecycle" precondition="aql: self.oclIsTypeOf(PROVE::ArtifactStateInstance)" iconPath="/PROVE.design/icons/ArtifactState.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="Process Design Analysis" activeByDefault="true">
        <edgeMappingImports name="internalEdges" importedMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState']">
          <conditionnalStyles predicateExpression="aql: self.eContainer(PROVE::ArtifactState).name->isEmpty() or self.eContainer(PROVE::ArtifactState).name=''">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsImplemented() //remove">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="shadowInEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer().name->isEmpty()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsUsed()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="shadowOutEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer().name->isEmpty()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not self.bIsImplemented()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsImplemented()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <toolSections>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkArtifact">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="Status" reusedMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState']">
        <edgeMappingImports name="AchievedColor" importedMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState']">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="AchievedColorShadowIn">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="AchievedColorShadowOut">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <toolSections name="Status">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkActivityState" mappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: element.eContainer()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Change status">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="element">
                        <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifact" valueExpression="aql: self.ancestors()->last().eAllContents()->select(myArtifact | myArtifact.name=element.artifactName)->last()">
                          <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifactStates" valueExpression="aql: foundArtifact.eAllContents()->select(myArtifactState | myArtifactState.name=element.name)">
                            <subModelOperations xsi:type="tool_1:For" expression="aql: foundArtifactStates">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: element.achievedStatus"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" labelExpression="Change artifact state status" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@additionalLayers[name='Status']/@toolSections.0/@ownedTools[name='dblclkActivityState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="ArtifactStateStat" labelExpression="Artifact State">
                    <controls xsi:type="properties:TextDescription" name="Artifact name" labelExpression="Type artifact name" isEnabledExpression="aql: false" valueExpression="aql: self.artifactName">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="artifactName" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:TextDescription" name="Artifact state" labelExpression="Type artifact state to change" isEnabledExpression="aql: false" valueExpression="aql: self.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="artifactState" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:CheckboxDescription" name="Status" labelExpression="Achieved" valueExpression="aql: self.achievedStatus">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ArtifactLife diagram" titleExpression="aql: self.name + ' Artifact-Life Diagram'" domainClass="PROVE::Artifact" rootExpression="aql: self" enablePopupBars="true">
      <metamodel href="dsm.PROVE#/"/>
      <defaultLayer name="Default">
        <nodeMappings name="ArtifactStates" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self.eContents()" domainClass="PROVE::ArtifactState">
          <style xsi:type="style:EllipseNodeDescription" labelSize="12" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="stateTransitions" preconditionExpression="aql: source.eContents(PROVE::ArtifactStateInstance).usedByActivity.eContainer()->excludes(self.originatingActivity)" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self.eAllContents(PROVE::ArtifactStateInstance)->reject(instance | instance.originatingActivity = instance.usedByActivity.eContainer())" documentation="source find expression: aql: self.eContainer().eContainer().eAllContents(PROVE::ArtifactStateInstance)->select(instance | instance.usedByActivity=self.originatingActivity).eContainer()->asOrderedSet()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;General semantic expressions:&#xD;&#xA;original: aql: self.eAllContents(PROVE::ArtifactStateInstance)->reject(instance | instance.originatingActivity = instance.usedByActivity.eContainer())&#xD;&#xA;Advanced precondition:&#xD;&#xA;aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;getting sourceNode:&#xD;&#xA;aql: self.eContents(diagram::DEdge).sourceNode&#xD;&#xA;&#xD;&#xA;Precondition expression:&#xD;&#xA;aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']" targetFinderExpression="aql: self.eContainer()" sourceFinderExpression="aql: self.eContainer().eContainer().eAllContents(PROVE::ArtifactStateInstance)->select(instance | instance.usedByActivity=self.originatingActivity and instance.originatingActivity.eContainer()&lt;>self.originatingActivity).eContainer()->asOrderedSet()" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql: self.originatingActivity.name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </defaultLayer>
      <additionalLayers name="Status" activeByDefault="true">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql: self.achievedStatus = true">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql: self.eContents()->size()==0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="REMOVE">
        <edgeMappings name="REMOVEstateTransitions" preconditionExpression="aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self.eAllContents(PROVE::ArtifactStateInstance)->reject(instance | instance.originatingActivity = instance.usedByActivity.eContainer())" documentation="source find expression: aql: self.eContainer().eContainer().eAllContents(PROVE::ArtifactStateInstance)->select(instance | instance.usedByActivity=self.originatingActivity).eContainer()->asOrderedSet()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;General semantic expressions:&#xD;&#xA;original: aql: self.eAllContents(PROVE::ArtifactStateInstance)->reject(instance | instance.originatingActivity = instance.usedByActivity.eContainer())&#xD;&#xA;Advanced precondition:&#xD;&#xA;aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;getting sourceNode:&#xD;&#xA;aql: self.eContents(diagram::DEdge).sourceNode&#xD;&#xA;&#xD;&#xA;Precondition expression:&#xD;&#xA;aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']" targetFinderExpression="aql: self.eContainer()" sourceFinderExpression="aql: self.eContainer().eContainer().eAllContents(PROVE::ArtifactStateInstance)->select(instance | instance.usedByActivity=self.originatingActivity).eContainer()->asOrderedSet()" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql: self.originatingActivity.name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:CrossTableDescription" name="ActivitiesInterfaces" titleExpression="aql: self.name + ' Interface Map'" domainClass="PROVE::Process" initialHeaderColumnWidth="-1">
      <metamodel href="dsm.PROVE#/"/>
      <ownedLineMappings name="InputActivity" domainClass="PROVE::Process" semanticCandidatesExpression="aql: self->asSet()->concat(self.eContents()->select(inst |  inst.eClass()&lt;>PROVE::ShadowNodeIncoming and inst.eClass()&lt;>PROVE::ShadowNodeOutgoing))" headerLabelExpression="aql: self.name">
        <ownedSubLines name="LowerInputActivity" reusedSubLines="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedLineMappings[name='InputActivity']/@ownedSubLines[name='LowerInputActivity']" reusedInMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedLineMappings[name='InputActivity']/@ownedSubLines[name='LowerInputActivity']" domainClass="PROVE::Process" semanticCandidatesExpression="aql: self.eContents()->select(inst | inst.eClass()&lt;>PROVE::ShadowNodeIncoming and inst.eClass()&lt;>PROVE::ShadowNodeOutgoing)" headerLabelExpression="aql: self.name"/>
      </ownedLineMappings>
      <ownedColumnMappings name="OutputActivity" headerLabelExpression="aql: self.name" domainClass="PROVE::Process" semanticCandidatesExpression="aql: self.eAllContents()->select(inst | inst.eClass()&lt;>PROVE::ShadowNodeIncoming and inst.eClass()&lt;>PROVE::ShadowNodeOutgoing)->concat(self->asSet())"/>
      <intersection name="InterfaceDefinition" lineMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedLineMappings[name='InputActivity'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedLineMappings[name='InputActivity']/@ownedSubLines[name='LowerInputActivity']" columnMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedColumnMappings.0" labelExpression="aql: self.resultArtifactInState->select(art| art.usedByActivity=columnSemantic)->collect(art| art.eContainer().eContainer().name + '::' + art.eContainer().name)" columnFinderExpression="aql: self.resultArtifactInState.usedByActivity">
        <defaultForeground>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </intersection>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="PROVE diagram MK2" titleExpression="aql: self.name + ' PROVE Diagram MK2'" initialisation="true" showOnStartup="true" domainClass="PROVE::Process" enablePopupBars="true">
      <metamodel href="dsm.PROVE#/"/>
      <layout xsi:type="description_1:CompositeLayout" direction="LeftToRight"/>
      <defaultLayer name="Default">
        <nodeMappings name="Process_PD" preconditionExpression="aql: self->notEmpty()=false" deletionDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteActivity']" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self" synchronizationLock="true" domainClass="PROVE::Process">
          <style xsi:type="style:SquareDescription" labelSize="14" tooltipExpression="PROVE Activity" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="20" height="20">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>italic</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="ArtifactInStateFlow" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactSourcePort'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@borderedNodeMappings[name='ScopeSourcePort']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactDestinationPort'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@borderedNodeMappings[name='ScopeDestinationPort']" targetFinderExpression="aql: self" sourceFinderExpression="aql: self" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ProcessTopHierarchy_PD" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self" semanticElements="aql: self.ancestors(PROVE::Process)->last().eAllContents(PROVE::Process)->select(process | process.ancestors()->excludes(self) and process.oclIsTypeOf(PROVE::Process))" synchronizationLock="true" domainClass="PROVE::Process">
          <borderedNodeMappings name="ScopeSourcePort" preconditionExpression="aql: container->concat(container.eAllContents(PROVE::Process))->excludes(self.originatingActivity)" semanticCandidatesExpression="aql: self->concat(self.eAllContents()).eInverse(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
            <style xsi:type="style:DotDescription" labelSize="12" tooltipExpression="aql: 'external source'" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="ScopeDestinationPort" preconditionExpression="aql: container->concat(container.eAllContents(PROVE::Process))->excludes(self.usedByActivity)" semanticCandidatesExpression="aql: self->concat(self.eAllContents()).eInverse(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
            <style xsi:type="style:DotDescription" labelSize="12" tooltipExpression="aql: 'external destination'" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </borderedNodeMappings>
          <subContainerMappings name="ProcessContainer_PD" semanticCandidatesExpression="aql: self" domainClass="PROVE::Process">
            <borderedNodeMappings name="ArtifactSourcePort" preconditionExpression="aql: self.originatingActivity=container" semanticCandidatesExpression="aql: self.eInverse(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
              <style xsi:type="style:DotDescription" labelSize="12" tooltipExpression="aql: 'deliverable/source'" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings name="ArtifactDestinationPort" preconditionExpression="aql: self.usedByActivity=container" semanticCandidatesExpression="aql: self.eInverse(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
              <style xsi:type="style:DotDescription" labelSize="12" tooltipExpression="aql: 'prerequisite/destination'" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </borderedNodeMappings>
            <subContainerMappings name="ProcessHierarchy_PD" preconditionExpression="aql: self->notEmpty()=true and self.oclIsTypeOf(PROVE::Process)" deletionDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteActivity']" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self.process" doubleClickDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='dblclkActivityProcess']" domainClass="PROVE::Process" reusedBorderedNodeMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactDestinationPort'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactSourcePort']" reusedContainerMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
              <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="aql: self.name">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="3" labelSize="12" showIcon="false" labelExpression="aql: self.name + ' scope'" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelFormat>italic</labelFormat>
            <labelFormat>underline</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="PROVE toolbox new">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Activity" nodeMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@nodeMappings[name='Process_PD']" iconPath="dsm.PROVE.edit\icons\full\obj16\ActivityAdd.gif" extraMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::Process" referenceName="process" variableName="instanceProcess">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ShadowNodeIncoming" referenceName="process" variableName="instanceProcessDummyIn"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ShadowNodeOutgoing" referenceName="process" variableName="instanceProcessDummyOut"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Activity Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='Activity']/@initialOperation/@firstModelOperations/@subModelOperations.1/@groups.0"/>
                  <groups name="Default Group" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:TextDescription" name="name" labelExpression="Activity name:" valueExpression="aql:instance.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcess">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcessDummyIn">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue+'DummyIn'"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcessDummyOut">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue+'DummyOut'"/>
                            </subModelOperations>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="ArtifactInState" label="Artifact in State" iconPath="dsm.PROVE.edit\icons\full\obj16\ArtifactAddSmall.png" extraSourceMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']" extraTargetMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.ancestors()->last()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Artifact in State Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:Let" variableName="foundArtifact" valueExpression="aql: OrderedSet{source, target}.ancestors().eAllContents()->select(artifact | artifact.name = newArtifactName)->last()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifactByNameFailed" valueExpression="aql: foundArtifact->isEmpty()">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: foundArtifactByNameFailed=true">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Artifact not found">
                              <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                                <initialOperation/>
                              </buttons>
                              <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                                <initialOperation>
                                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source.ancestors()->last()">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::Artifact" referenceName="artifact" variableName="foundArtifact">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:foundArtifact">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newArtifactName"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </firstModelOperations>
                                </initialOperation>
                              </buttons>
                              <page name="Confirm creation" labelExpression="Confirm creation of new artifact by clicking on 'OK' (otherwise 'CANCEL')" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ArtifactInState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@buttons.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                              <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:foundArtifact">
                            <subModelOperations xsi:type="tool_1:Let" variableName="foundState" valueExpression="aql: foundArtifact.eContents(PROVE::ArtifactState)->select(artifactState | artifactState.name = newStateName)->last()">
                              <subModelOperations xsi:type="tool_1:Let" variableName="foundStateFailed" valueExpression="aql: foundState->isEmpty()">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: foundStateFailed=true">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ArtifactState" referenceName="state" variableName="foundState">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newStateName"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="artifactName" valueExpression="var:newArtifactName"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: foundState">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ArtifactStateInstance" referenceName="artifactstateinstance">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="usedByActivity" valueExpression="var:target"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="originatingActivity" valueExpression="aql: source"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: foundState"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ArtifactInState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="Default Group" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:TextDescription" name="ArtifactName" labelExpression="Artifact Name:">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newArtifactName" valueExpression="aql:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:TextDescription" labelExpression="State name:">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newStateName" valueExpression="aql:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkActivityProcess" mappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ChangeName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectArtifactTarget">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="usedByActivity" valueExpression="aql: target"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectArtifactSource" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="originatingActivity" valueExpression="aql: target"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ChangeArtifactDetails">
            <mask mask="{0}::{1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::ArtifactState)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg1"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::Artifact)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql: self.eContents(PROVE::ArtifactState)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="artifactName" valueExpression="aql: arg0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteActivity">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element">
                <subModelOperations xsi:type="tool_1:For" expression="aql: element.artifactInStateUsed">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="aql: element.resultArtifactInState">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Representation Tools">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="encapsulate" candidatesExpression="aql: self.process->select(instance| instance.oclIsTypeOf(PROVE::Process))" multiple="true" message="Select elements to encapsulate in this diagram" iconPath="/PROVE.design/icons/inspectEncapSmall.png" windowTitle="Process Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element->filter(PROVE::Process).encapsulateElements(diagram)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="de-encapsulate" candidatesExpression="aql: self.process->select(instance| instance.oclIsTypeOf(PROVE::Process))" multiple="true" iconPath="/PROVE.design/icons/inspectDeEncapSmall.png" windowTitle="Cancel Process Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element->filter(PROVE::Process).decapsulateElements(diagram)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="Show Artifact Lifecycle" precondition="aql: self.oclIsTypeOf(PROVE::ArtifactStateInstance)" iconPath="/PROVE.design/icons/ArtifactState.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="Process Design Analysis">
        <edgeMappingImports name="internalEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer(PROVE::ArtifactState).name->isEmpty() or self.eContainer(PROVE::ArtifactState).name=''">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsImplemented() //remove">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="shadowInEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer().name->isEmpty()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsUsed()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="shadowOutEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer().name->isEmpty()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not self.bIsImplemented()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsImplemented()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <toolSections>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkArtifact">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="Status">
        <edgeMappingImports name="AchievedColor">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="AchievedColorShadowIn">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="AchievedColorShadowOut">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <toolSections name="Status">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkActivityState">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: element.eContainer()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Change status">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="element">
                        <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifact" valueExpression="aql: self.ancestors()->last().eAllContents()->select(myArtifact | myArtifact.name=element.artifactName)->last()">
                          <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifactStates" valueExpression="aql: foundArtifact.eAllContents()->select(myArtifactState | myArtifactState.name=element.name)">
                            <subModelOperations xsi:type="tool_1:For" expression="aql: foundArtifactStates">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: element.achievedStatus"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" labelExpression="Change artifact state status" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@additionalLayers[name='Status']/@toolSections.0/@ownedTools[name='dblclkActivityState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="ArtifactStateStat" labelExpression="Artifact State">
                    <controls xsi:type="properties:TextDescription" name="Artifact name" labelExpression="Type artifact name" isEnabledExpression="aql: false" valueExpression="aql: self.artifactName">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="artifactName" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:TextDescription" name="Artifact state" labelExpression="Type artifact state to change" isEnabledExpression="aql: false" valueExpression="aql: self.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="artifactState" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:CheckboxDescription" name="Status" labelExpression="Achieved" valueExpression="aql: self.achievedStatus">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Deprecated PROVE diagram" titleExpression="aql: self.name + ' PROVE Diagram MK2 (deprecated)'" initialisation="true" showOnStartup="true" domainClass="PROVE::Process" enablePopupBars="true">
      <metamodel href="dsm.PROVE#/"/>
      <layout xsi:type="description_1:CompositeLayout" direction="LeftToRight"/>
      <defaultLayer name="Default">
        <nodeMappings name="Process_PD" preconditionExpression="aql: self->notEmpty()=false" deletionDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteActivity']" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self" synchronizationLock="true" domainClass="PROVE::Process">
          <style xsi:type="style:SquareDescription" labelSize="14" tooltipExpression="PROVE Activity" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="20" height="20">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>italic</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="ArtifactInState_PD" preconditionExpression="aql: self.originatingActivity.eContents()->excludes(self.usedByActivity) and self.usedByActivity.eContents()->excludes(self.originatingActivity)" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" doubleClickDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@additionalLayers[name='Status']/@toolSections.0/@ownedTools[name='dblclkActivityState']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']" targetFinderExpression="aql: self.usedByActivity " sourceFinderExpression="aql: self.originatingActivity" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArtifactInStateOut" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactPortOut']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']" targetFinderExpression="aql: self.originatingActivity" sourceFinderExpression="aql: self" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArtifactInStateIn" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactPortIn']" targetFinderExpression="aql: self" sourceFinderExpression="aql: self.usedByActivity" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArtifactInStateFromInPortInternal" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactPortIn']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']" targetFinderExpression="aql: self.usedByActivity " sourceFinderExpression="aql: self.siblings().old" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArtifactInStateToOutPortInternal" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactPortOut']" targetFinderExpression="aql: self.siblings()" sourceFinderExpression="aql: self.originatingActivity.deleted" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArtifactInStateToPort_PD" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactInternalPortOut']" targetFinderExpression="aql: self" sourceFinderExpression="aql: self.originatingActivity" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ArtifactInStateFromPort_PD" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeArtifactDetails']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactInternalPortIn']" targetMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']" targetFinderExpression="aql: self.usedByActivity " sourceFinderExpression="aql: self" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true" reconnections="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactSource'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReconnectArtifactTarget']">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ProcessTopHierarchy_PD" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self" semanticElements="aql: self.ancestors(PROVE::Process)->last().eAllContents(PROVE::Process)->select(process | process.ancestors()->excludes(self))" synchronizationLock="true" domainClass="PROVE::Process">
          <subContainerMappings name="ProcessContainer_PD" semanticCandidatesExpression="aql: self" domainClass="PROVE::Process">
            <borderedNodeMappings name="ArtifactPortOut" preconditionExpression="aql: self.originatingActivity=container and self.usedByActivity.ancestors()->excludes(self.originatingActivity)" semanticCandidatesExpression="aql: self.ancestors()->prepend(self)->last().eAllContents(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
              <style xsi:type="style:DotDescription" labelSize="12" tooltipExpression="aql: 'Output flow'" sizeComputationExpression="1" labelPosition="node" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings name="ArtifactPortIn" preconditionExpression="aql: self.usedByActivity=container and self.originatingActivity.ancestors()->excludes(self.usedByActivity)" semanticCandidatesExpression="aql: self.ancestors()->prepend(self)->last().eAllContents(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
              <style xsi:type="style:DotDescription" labelSize="12" tooltipExpression="aql: 'Input flow'" sizeComputationExpression="1" labelPosition="node" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>EAST</forbiddenSides>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings name="ArtifactInternalPortOut" preconditionExpression="aql: self.usedByActivity=container and self.originatingActivity.ancestors()->includes(self.usedByActivity)" semanticCandidatesExpression="aql: self.ancestors()->prepend(self)->last().eAllContents(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
              <style xsi:type="style:DotDescription" labelSize="12" tooltipExpression="aql: 'deliverable'" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings name="ArtifactInternalPortIn" preconditionExpression="aql: self.originatingActivity=container and self.usedByActivity.ancestors()->includes(self.originatingActivity)" semanticCandidatesExpression="aql: self.ancestors()->prepend(self)->last().eAllContents(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
              <style xsi:type="style:DotDescription" labelSize="12" tooltipExpression="aql: 'prerequisite'" sizeComputationExpression="1" labelPosition="node" resizeKind="NSEW" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>EAST</forbiddenSides>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </borderedNodeMappings>
            <subContainerMappings name="ProcessHierarchy_PD" preconditionExpression="aql: self->notEmpty()=true and self.oclIsTypeOf(PROVE::Process)" deletionDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteActivity']" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self.process" doubleClickDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='dblclkActivityProcess']" domainClass="PROVE::Process" reusedBorderedNodeMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactInternalPortIn'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactInternalPortOut']" reusedContainerMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
              <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="aql: self.name">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="3" labelSize="12" showIcon="false" labelExpression="aql: self.name + ' scope'" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelFormat>italic</labelFormat>
            <labelFormat>underline</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="PROVE toolbox new">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Activity" nodeMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@nodeMappings[name='Process_PD']" iconPath="dsm.PROVE.edit\icons\full\obj16\ActivityAdd.gif" extraMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::Process" referenceName="process" variableName="instanceProcess">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ShadowNodeIncoming" referenceName="process" variableName="instanceProcessDummyIn"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ShadowNodeOutgoing" referenceName="process" variableName="instanceProcessDummyOut"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Activity Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Activity']/@initialOperation/@firstModelOperations/@subModelOperations.1/@groups.0"/>
                  <groups name="Default Group" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:TextDescription" name="name" labelExpression="Activity name:" valueExpression="aql:instance.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcess">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcessDummyIn">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue+'DummyIn'"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcessDummyOut">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue+'DummyOut'"/>
                            </subModelOperations>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="ArtifactInState" label="Artifact in State" iconPath="dsm.PROVE.edit\icons\full\obj16\ArtifactAddSmall.png" extraSourceMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']" extraTargetMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD'] //@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.ancestors()->last()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Artifact in State Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:Let" variableName="foundArtifact" valueExpression="aql: OrderedSet{source, target}.ancestors().eAllContents()->select(artifact | artifact.name = newArtifactName)->last()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifactByNameFailed" valueExpression="aql: foundArtifact->isEmpty()">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: foundArtifactByNameFailed=true">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Artifact not found">
                              <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                                <initialOperation/>
                              </buttons>
                              <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                                <initialOperation>
                                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source.ancestors()->last()">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::Artifact" referenceName="artifact" variableName="foundArtifact">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:foundArtifact">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newArtifactName"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </firstModelOperations>
                                </initialOperation>
                              </buttons>
                              <page name="Confirm creation" labelExpression="Confirm creation of new artifact by clicking on 'OK' (otherwise 'CANCEL')" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ArtifactInState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@buttons.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                              <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:foundArtifact">
                            <subModelOperations xsi:type="tool_1:Let" variableName="foundState" valueExpression="aql: foundArtifact.eContents(PROVE::ArtifactState)->select(artifactState | artifactState.name = newStateName)->last()">
                              <subModelOperations xsi:type="tool_1:Let" variableName="foundStateFailed" valueExpression="aql: foundState->isEmpty()">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: foundStateFailed=true">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ArtifactState" referenceName="state" variableName="foundState">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newStateName"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="artifactName" valueExpression="var:newArtifactName"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: foundState">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ArtifactStateInstance" referenceName="artifactstateinstance">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="usedByActivity" valueExpression="var:target"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="originatingActivity" valueExpression="aql: source"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: foundState"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ArtifactInState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="Default Group" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:TextDescription" name="ArtifactName" labelExpression="Artifact Name:">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newArtifactName" valueExpression="aql:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:TextDescription" labelExpression="State name:">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newStateName" valueExpression="aql:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkActivityProcess" mappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ChangeName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectArtifactTarget">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="usedByActivity" valueExpression="aql: target"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectArtifactSource" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="originatingActivity" valueExpression="aql: target"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ChangeArtifactDetails">
            <mask mask="{0}::{1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::ArtifactState)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg1"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::Artifact)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql: self.eContents(PROVE::ArtifactState)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="artifactName" valueExpression="aql: arg0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteActivity">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element">
                <subModelOperations xsi:type="tool_1:For" expression="aql: element.artifactInStateUsed">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="aql: element.resultArtifactInState">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Representation Tools">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="encapsulate" candidatesExpression="aql: self.process->select(instance| instance.oclIsTypeOf(PROVE::Process))" multiple="true" message="Select elements to encapsulate in this diagram" iconPath="/PROVE.design/icons/inspectEncapSmall.png" windowTitle="Process Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element->filter(PROVE::Process).encapsulateElements(diagram)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="de-encapsulate" candidatesExpression="aql: self.process->select(instance| instance.oclIsTypeOf(PROVE::Process))" multiple="true" iconPath="/PROVE.design/icons/inspectDeEncapSmall.png" windowTitle="Cancel Process Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element->filter(PROVE::Process).decapsulateElements(diagram)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="Show Artifact Lifecycle" precondition="aql: self.oclIsTypeOf(PROVE::ArtifactStateInstance)" iconPath="/PROVE.design/icons/ArtifactState.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="Process Design Analysis">
        <edgeMappingImports name="internalEdges" importedMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState_PD']">
          <conditionnalStyles predicateExpression="aql: self.eContainer(PROVE::ArtifactState).name->isEmpty() or self.eContainer(PROVE::ArtifactState).name=''">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsImplemented() //remove">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="shadowInEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer().name->isEmpty()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsUsed()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="shadowOutEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer().name->isEmpty()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not self.bIsImplemented()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsImplemented()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <toolSections>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkArtifact">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='ArtifactLife%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="Status" reusedMappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState_PD']">
        <edgeMappingImports name="AchievedColor" importedMapping="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState_PD']">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="AchievedColorShadowIn">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="AchievedColorShadowOut">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <toolSections name="Status">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkActivityState" mappings="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@defaultLayer/@edgeMappings[name='ArtifactInState_PD']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: element.eContainer()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Change status">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="element">
                        <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifact" valueExpression="aql: self.ancestors()->last().eAllContents()->select(myArtifact | myArtifact.name=element.artifactName)->last()">
                          <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifactStates" valueExpression="aql: foundArtifact.eAllContents()->select(myArtifactState | myArtifactState.name=element.name)">
                            <subModelOperations xsi:type="tool_1:For" expression="aql: foundArtifactStates">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: element.achievedStatus"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" labelExpression="Change artifact state status" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpoint']/@ownedRepresentations[name='Deprecated%20PROVE%20diagram']/@additionalLayers[name='Status']/@toolSections.0/@ownedTools[name='dblclkActivityState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="ArtifactStateStat" labelExpression="Artifact State">
                    <controls xsi:type="properties:TextDescription" name="Artifact name" labelExpression="Type artifact name" isEnabledExpression="aql: false" valueExpression="aql: self.artifactName">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="artifactName" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:TextDescription" name="Artifact state" labelExpression="Type artifact state to change" isEnabledExpression="aql: false" valueExpression="aql: self.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="artifactState" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:CheckboxDescription" name="Status" labelExpression="Achieved" valueExpression="aql: self.achievedStatus">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="PROVE.design.Services"/>
  </ownedViewpoints>
  <ownedViewpoints name="PROVEviewpointMk2" label="PROVE Viewpoint Mk2">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ArtifactLife diagram" titleExpression="aql: self.name + ' Artifact-Life Diagram'" domainClass="PROVE::Artifact" rootExpression="aql: self" enablePopupBars="true">
      <metamodel href="dsm.PROVE#/"/>
      <defaultLayer name="Default">
        <nodeMappings name="ArtifactStates" semanticCandidatesExpression="aql: self.eContents()" domainClass="PROVE::ArtifactState">
          <style xsi:type="style:EllipseNodeDescription" labelSize="12" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="stateTransitions" preconditionExpression="aql: source.eContents(PROVE::ArtifactStateInstance).usedByActivity.eContainer()->excludes(self.originatingActivity)" semanticCandidatesExpression="aql: self.eAllContents(PROVE::ArtifactStateInstance)->reject(instance | instance.originatingActivity = instance.usedByActivity.eContainer())" documentation="source find expression: aql: self.eContainer().eContainer().eAllContents(PROVE::ArtifactStateInstance)->select(instance | instance.usedByActivity=self.originatingActivity).eContainer()->asOrderedSet()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;General semantic expressions:&#xD;&#xA;original: aql: self.eAllContents(PROVE::ArtifactStateInstance)->reject(instance | instance.originatingActivity = instance.usedByActivity.eContainer())&#xD;&#xA;Advanced precondition:&#xD;&#xA;aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;getting sourceNode:&#xD;&#xA;aql: self.eContents(diagram::DEdge).sourceNode&#xD;&#xA;&#xD;&#xA;Precondition expression:&#xD;&#xA;aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)" sourceMapping="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']" targetMapping="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']" targetFinderExpression="aql: self.eContainer()" sourceFinderExpression="aql: self.eContainer().eContainer().eAllContents(PROVE::ArtifactStateInstance)->select(instance | instance.usedByActivity=self.originatingActivity and instance.originatingActivity.eContainer()&lt;>self.originatingActivity).eContainer()->asOrderedSet()" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql: self.originatingActivity.name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </defaultLayer>
      <additionalLayers name="Status" activeByDefault="true">
        <customization>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql: self.achievedStatus = true">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
          <vsmElementCustomizations xsi:type="description:VSMElementCustomization" predicateExpression="aql: self.eContents()->size()==0">
            <featureCustomizations xsi:type="description:EReferenceCustomization" appliedOn="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']/@style" referenceName="color">
              <value href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </featureCustomizations>
          </vsmElementCustomizations>
        </customization>
      </additionalLayers>
      <additionalLayers name="REMOVE">
        <edgeMappings name="REMOVEstateTransitions" preconditionExpression="aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)" semanticCandidatesExpression="aql: self.eAllContents(PROVE::ArtifactStateInstance)->reject(instance | instance.originatingActivity = instance.usedByActivity.eContainer())" documentation="source find expression: aql: self.eContainer().eContainer().eAllContents(PROVE::ArtifactStateInstance)->select(instance | instance.usedByActivity=self.originatingActivity).eContainer()->asOrderedSet()&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;General semantic expressions:&#xD;&#xA;original: aql: self.eAllContents(PROVE::ArtifactStateInstance)->reject(instance | instance.originatingActivity = instance.usedByActivity.eContainer())&#xD;&#xA;Advanced precondition:&#xD;&#xA;aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;getting sourceNode:&#xD;&#xA;aql: self.eContents(diagram::DEdge).sourceNode&#xD;&#xA;&#xD;&#xA;Precondition expression:&#xD;&#xA;aql: diagram.eAllContents().target->filter(PROVE::ArtifactStateInstance)->select(instance| instance.siblings()->includes(self))->excludes(inst | inst. self.originatingActivity)" sourceMapping="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']" targetMapping="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ArtifactLife%20diagram']/@defaultLayer/@nodeMappings[name='ArtifactStates']" targetFinderExpression="aql: self.eContainer()" sourceFinderExpression="aql: self.eContainer().eContainer().eAllContents(PROVE::ArtifactStateInstance)->select(instance | instance.usedByActivity=self.originatingActivity).eContainer()->asOrderedSet()" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql: self.originatingActivity.name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:CrossTableDescription" name="ActivitiesInterfaces" titleExpression="aql: self.name + ' Interface Map'" domainClass="PROVE::Process" initialHeaderColumnWidth="-1">
      <metamodel href="dsm.PROVE#/"/>
      <ownedLineMappings name="InputActivity" domainClass="PROVE::Process" semanticCandidatesExpression="aql: self->asSet()->concat(self.eContents()->select(inst |  inst.eClass()&lt;>PROVE::ShadowNodeIncoming and inst.eClass()&lt;>PROVE::ShadowNodeOutgoing))" headerLabelExpression="aql: self.name">
        <ownedSubLines name="LowerInputActivity" reusedSubLines="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedLineMappings[name='InputActivity']/@ownedSubLines[name='LowerInputActivity']" reusedInMappings="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedLineMappings[name='InputActivity']/@ownedSubLines[name='LowerInputActivity']" domainClass="PROVE::Process" semanticCandidatesExpression="aql: self.eContents()->select(inst | inst.eClass()&lt;>PROVE::ShadowNodeIncoming and inst.eClass()&lt;>PROVE::ShadowNodeOutgoing)" headerLabelExpression="aql: self.name"/>
      </ownedLineMappings>
      <ownedColumnMappings name="OutputActivity" headerLabelExpression="aql: self.name" domainClass="PROVE::Process" semanticCandidatesExpression="aql: self.eAllContents()->select(inst | inst.eClass()&lt;>PROVE::ShadowNodeIncoming and inst.eClass()&lt;>PROVE::ShadowNodeOutgoing)->concat(self->asSet())"/>
      <intersection name="InterfaceDefinition" lineMapping="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedLineMappings[name='InputActivity'] //@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedLineMappings[name='InputActivity']/@ownedSubLines[name='LowerInputActivity']" columnMapping="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ActivitiesInterfaces']/@ownedColumnMappings.0" labelExpression="aql: self.resultArtifactInState->select(art| art.usedByActivity=columnSemantic)->collect(art| art.eContainer().eContainer().name + '::' + art.eContainer().name)" columnFinderExpression="aql: self.resultArtifactInState.usedByActivity">
        <defaultForeground>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </intersection>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="PROVE diagram MK2" titleExpression="aql: self.name + ' PROVE Diagram MK2'" initialisation="true" showOnStartup="true" domainClass="PROVE::Process" enablePopupBars="true">
      <metamodel href="dsm.PROVE#/"/>
      <layout xsi:type="description_1:CompositeLayout" padding="100" direction="LeftToRight"/>
      <defaultLayer name="Default">
        <nodeMappings name="Process_PD" preconditionExpression="aql: self->notEmpty()=false" semanticCandidatesExpression="aql: self" synchronizationLock="true" domainClass="PROVE::Process">
          <style xsi:type="style:SquareDescription" labelSize="14" tooltipExpression="PROVE Activity" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" width="20" height="20">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>italic</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="ArtifactInStateFlow" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactSourcePort'] //@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@borderedNodeMappings[name='ScopeSourcePort']" targetMapping="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactDestinationPort'] //@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@borderedNodeMappings[name='ScopeDestinationPort']" targetFinderExpression="aql: self" sourceFinderExpression="aql: self" domainClass="PROVE::ArtifactStateInstance" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="ProcessTopHierarchy_PD" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self" semanticElements="aql: self.ancestors(PROVE::Process)->last().eAllContents(PROVE::Process)->select(process | process.ancestors()->excludes(self) and process.oclIsTypeOf(PROVE::Process))" synchronizationLock="true" domainClass="PROVE::Process">
          <borderedNodeMappings name="ScopeSourcePort" preconditionExpression="aql: container->concat(container.eAllContents(PROVE::Process))->excludes(self.originatingActivity)" semanticCandidatesExpression="aql: self->concat(self.eAllContents()).eInverse(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
            <style xsi:type="style:DotDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="aql: 'external source'" sizeComputationExpression="1" labelPosition="node" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </borderedNodeMappings>
          <borderedNodeMappings name="ScopeDestinationPort" preconditionExpression="aql: container->concat(container.eAllContents(PROVE::Process))->excludes(self.usedByActivity)" semanticCandidatesExpression="aql: self->concat(self.eAllContents()).eInverse(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
            <style xsi:type="style:DotDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="aql: 'external destination'" sizeComputationExpression="1" labelPosition="node" strokeSizeComputationExpression="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </borderedNodeMappings>
          <subContainerMappings name="ProcessContainer_PD" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self" domainClass="PROVE::Process">
            <borderedNodeMappings name="ArtifactSourcePort" preconditionExpression="aql: self.originatingActivity=container" semanticCandidatesExpression="aql: self.eInverse(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
              <style xsi:type="style:DotDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="aql: 'deliverable/source'" sizeComputationExpression="1" labelPosition="node" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings name="ArtifactDestinationPort" preconditionExpression="aql: self.usedByActivity=container" semanticCandidatesExpression="aql: self.eInverse(PROVE::ArtifactStateInstance)" domainClass="PROVE::ArtifactStateInstance">
              <style xsi:type="style:DotDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="aql: 'prerequisite/destination'" sizeComputationExpression="1" labelPosition="node" strokeSizeComputationExpression="1">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </borderedNodeMappings>
            <subContainerMappings name="ProcessHierarchy_PD" preconditionExpression="aql: self->notEmpty()=true and self.oclIsTypeOf(PROVE::Process)" deletionDescription="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='DeleteActivity']" labelDirectEdit="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ChangeName']" semanticCandidatesExpression="aql: self.process" doubleClickDescription="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='dblclkActivityProcess']" domainClass="PROVE::Process" reusedBorderedNodeMappings="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactDestinationPort'] //@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@borderedNodeMappings[name='ArtifactSourcePort']" reusedContainerMappings="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
              <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="aql: self.name">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="3" labelSize="12" showIcon="false" labelExpression="aql: self.name + ' scope'" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelFormat>italic</labelFormat>
            <labelFormat>underline</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="PROVE toolbox new">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Activity" nodeMappings="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@nodeMappings[name='Process_PD']" iconPath="dsm.PROVE.edit\icons\full\obj16\ActivityAdd.gif" extraMappings="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD'] //@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::Process" referenceName="process" variableName="instanceProcess">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ShadowNodeIncoming" referenceName="process" variableName="instanceProcessDummyIn"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ShadowNodeOutgoing" referenceName="process" variableName="instanceProcessDummyOut"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Activity Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation/>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='Activity']/@initialOperation/@firstModelOperations/@subModelOperations.1/@groups.0"/>
                  <groups name="Default Group" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:TextDescription" name="name" labelExpression="Activity name:" valueExpression="aql:instance.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcess">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcessDummyIn">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue+'DummyIn'"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:instanceProcessDummyOut">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue+'DummyOut'"/>
                            </subModelOperations>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="ArtifactInState" label="Artifact in State" iconPath="dsm.PROVE.edit\icons\full\obj16\ArtifactAddSmall.png" extraSourceMappings="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD'] //@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']" extraTargetMappings="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD'] //@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:source.ancestors()->last()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Artifact in State Creation">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:Let" variableName="foundArtifact" valueExpression="aql: OrderedSet{source, target}.ancestors().eAllContents()->select(artifact | artifact.name = newArtifactName)->last()">
                        <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifactByNameFailed" valueExpression="aql: foundArtifact->isEmpty()">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: foundArtifactByNameFailed=true">
                            <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Artifact not found">
                              <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                                <initialOperation/>
                              </buttons>
                              <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                                <initialOperation>
                                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: source.ancestors()->last()">
                                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::Artifact" referenceName="artifact" variableName="foundArtifact">
                                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:foundArtifact">
                                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newArtifactName"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </firstModelOperations>
                                </initialOperation>
                              </buttons>
                              <page name="Confirm creation" labelExpression="Confirm creation of new artifact by clicking on 'OK' (otherwise 'CANCEL')" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ArtifactInState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@buttons.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                              <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:foundArtifact">
                            <subModelOperations xsi:type="tool_1:Let" variableName="foundState" valueExpression="aql: foundArtifact.eContents(PROVE::ArtifactState)->select(artifactState | artifactState.name = newStateName)->last()">
                              <subModelOperations xsi:type="tool_1:Let" variableName="foundStateFailed" valueExpression="aql: foundState->isEmpty()">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql: foundStateFailed=true">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ArtifactState" referenceName="state" variableName="foundState">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newStateName"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="artifactName" valueExpression="var:newArtifactName"/>
                                  </subModelOperations>
                                </subModelOperations>
                                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: foundState">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="PROVE::ArtifactStateInstance" referenceName="artifactstateinstance">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="usedByActivity" valueExpression="var:target"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="originatingActivity" valueExpression="aql: source"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: foundState"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@toolSections.0/@ownedTools[name='ArtifactInState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="Default Group" semanticCandidateExpression="var:self">
                    <controls xsi:type="properties:TextDescription" name="ArtifactName" labelExpression="Artifact Name:">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newArtifactName" valueExpression="aql:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:TextDescription" labelExpression="State name:">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="newStateName" valueExpression="aql:newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkActivityProcess" mappings="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@defaultLayer/@containerMappings[name='ProcessTopHierarchy_PD']/@subContainerMappings[name='ProcessContainer_PD']/@subContainerMappings[name='ProcessHierarchy_PD']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ChangeName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectArtifactTarget">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="usedByActivity" valueExpression="aql: target"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ReconnectArtifactSource" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="originatingActivity" valueExpression="aql: target"/>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="ChangeArtifactDetails">
            <mask mask="{0}::{1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::ArtifactState)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg1"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::Artifact)">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: arg0"/>
                  <subModelOperations xsi:type="tool_1:For" expression="aql: self.eContents(PROVE::ArtifactState)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="artifactName" valueExpression="aql: arg0"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteActivity">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element">
                <subModelOperations xsi:type="tool_1:For" expression="aql: element.artifactInStateUsed">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="aql: element.resultArtifactInState">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Representation Tools">
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="encapsulate" candidatesExpression="aql: self.process->select(instance| instance.oclIsTypeOf(PROVE::Process))" multiple="true" message="Select elements to encapsulate in this diagram" iconPath="/PROVE.design/icons/inspectEncapSmall.png" windowTitle="Process Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element->filter(PROVE::Process).encapsulateElements(diagram)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:SelectionWizardDescription" name="de-encapsulate" candidatesExpression="aql: self.process->select(instance| instance.oclIsTypeOf(PROVE::Process))" multiple="true" iconPath="/PROVE.design/icons/inspectDeEncapSmall.png" windowTitle="Cancel Process Encapsulation">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Let" valueExpression="aql: element->filter(PROVE::Process).decapsulateElements(diagram)"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ToolDescription" name="Show Artifact Lifecycle" precondition="aql: self.oclIsTypeOf(PROVE::ArtifactStateInstance)" iconPath="/PROVE.design/icons/ArtifactState.gif">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ArtifactLife%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="Process Design Analysis">
        <edgeMappingImports name="internalEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer(PROVE::ArtifactState).name->isEmpty() or self.eContainer(PROVE::ArtifactState).name=''">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsImplemented() //remove">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="shadowInEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer().name->isEmpty()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsUsed()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="shadowOutEdges">
          <conditionnalStyles predicateExpression="aql: self.eContainer().name->isEmpty()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not((self.originatingActivity->last()=self.usedByActivity->last().eContainer()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last()) or (self.originatingActivity->last().eContainer()=self.usedByActivity->last().eContainer()))">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: not self.bIsImplemented()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql: self.bIsImplemented()">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <toolSections>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkArtifact">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='ArtifactLife%20diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="Status">
        <edgeMappingImports name="AchievedColor">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="AchievedColorShadowIn">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <edgeMappingImports name="AchievedColorShadowOut">
          <conditionnalStyles predicateExpression="aql: self.eContainer().achievedStatus">
            <style sizeComputationExpression="2">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_green']"/>
              <centerLabelStyleDescription labelSize="12" labelExpression="aql:self.eContainer().artifactName+'::'+self.eContainer().name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappingImports>
        <toolSections name="Status">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="dblclkActivityState">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: element.eContainer()">
                <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Change status">
                  <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                    <initialOperation/>
                  </buttons>
                  <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="element">
                        <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifact" valueExpression="aql: self.ancestors()->last().eAllContents()->select(myArtifact | myArtifact.name=element.artifactName)->last()">
                          <subModelOperations xsi:type="tool_1:Let" variableName="foundArtifactStates" valueExpression="aql: foundArtifact.eAllContents()->select(myArtifactState | myArtifactState.name=element.name)">
                            <subModelOperations xsi:type="tool_1:For" expression="aql: foundArtifactStates">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: element.achievedStatus"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </firstModelOperations>
                    </initialOperation>
                  </buttons>
                  <page name="Default Page" labelExpression="Change artifact state status" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='PROVEviewpointMk2']/@ownedRepresentations[name='PROVE%20diagram%20MK2']/@additionalLayers[name='Status']/@toolSections.0/@ownedTools[name='dblclkActivityState']/@initialOperation/@firstModelOperations/@subModelOperations.0/@groups.0"/>
                  <groups name="ArtifactStateStat" labelExpression="Artifact State">
                    <controls xsi:type="properties:TextDescription" name="Artifact name" labelExpression="Type artifact name" isEnabledExpression="aql: false" valueExpression="aql: self.artifactName">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="artifactName" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:TextDescription" name="Artifact state" labelExpression="Type artifact state to change" isEnabledExpression="aql: false" valueExpression="aql: self.name">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:Let" variableName="artifactState" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                    <controls xsi:type="properties:CheckboxDescription" name="Status" labelExpression="Achieved" valueExpression="aql: self.achievedStatus">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: newValue"/>
                        </firstModelOperations>
                      </initialOperation>
                    </controls>
                  </groups>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="PROVE.design.Services"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription">
    <categories>
      <pages name="ProcessPage" labelExpression="PROVE Process" domainClass="PROVE::Process" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="TemplateForPage" labelExpression="PROVE Process" domainClass="PROVE::" groups="//@extensions.0/@categories.0/@groups.0">
        <extends href="platform:/plugin/org.eclipse.sirius.properties.defaultrules/model/properties.odesign#//@extensions.0/@categories.0/@pages.0"/>
      </pages>
      <pages name="ArtifactInStateInstancePage" labelExpression="Artifact in state" domainClass="PROVE::ArtifactStateInstance" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.1"/>
      <groups name="ProcessGroup" labelExpression="Process information" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="name" labelExpression="aql: 'Process name: '" valueExpression="aql: self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="processStatus" labelExpression="Process status:" valueExpression="aql: self.">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:TextAreaDescription" name="notes" labelExpression="Process notes" valueExpression="aql: self.notes">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="notes" valueExpression="aql: newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
      <groups name="ArtifactInState" labelExpression="Artifact in state instance" domainClass="PROVE::ArtifactStateInstance" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:TextDescription" name="artifactName" labelExpression="Artifact name:" isEnabledExpression="aql: false" valueExpression="aql: self.eContainer(PROVE::Artifact).name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="artifactState" labelExpression="Artifact state:" valueExpression="aql: self.eContainer(PROVE::ArtifactState)" candidatesExpression="aql: self.eContainer(PROVE::Artifact).eContents(PROVE::ArtifactState)" candidateDisplayExpression="aql: candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:CheckboxDescription" name="achievedStatus" labelExpression="Status achieved" valueExpression="aql: self.eContainer(PROVE::ArtifactState).achievedStatus">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: self.eContainer(PROVE::ArtifactState)">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="achievedStatus" valueExpression="aql: newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="flowInstance">
          <controls xsi:type="properties:TextDescription" name="flowSource" labelExpression="Artifact in state flow source:" isEnabledExpression="aql: false" valueExpression="aql: self.originatingActivity.name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:TextDescription" name="flowDestination" labelExpression="Artifact in state flow destination:" isEnabledExpression="aql: false" valueExpression="aql: self.usedByActivity.name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
